{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\Desktop\\\\client\\\\src\\\\features\\\\resultPage\\\\resultPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './resultPage.css';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LoadingPage from '../loadingPage/loadingPage';\nimport FailPage from '../failPage/failPage';\nimport { Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResultPage() {\n  _s();\n\n  const history = useHistory();\n  const userData = useSelector(state => state.user.userData);\n  const status = useSelector(state => state.user.status);\n\n  function titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n\n    for (var i = 0; i < splitStr.length; i++) {\n      // You do not need to check if i is larger than splitStr length, as your for does that for you\n      // Assign it back to the array\n      splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    } // Directly return the joined string\n\n\n    return splitStr.join(' ');\n  }\n\n  useEffect(() => {\n    window.localStorage.setItem('imanuser', userData);\n    history.push('/result');\n  }, [input]);\n  let content;\n\n  if (status === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this);\n  } else if (status === 'succeed') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome Back \", titleCase(userData.name), \" !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", titleCase(userData.name)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Designation: \", titleCase(userData.position)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", userData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contact No: \", userData.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"button-email home-button\",\n          onClick: () => window.location.href = '/',\n          children: \"Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"button-result\",\n          onClick: () => {\n            history.push(`/user/${userData._id}`);\n          },\n          children: \"Click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  } else if (status === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(FailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 20\n    }, this);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ResultPage, \"C4Zi+opX7NsRt9cUSH9tRrD6Dn0=\", false, function () {\n  return [useHistory, useSelector, useSelector];\n});\n\n_c = ResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"sources":["C:/Users/ROG/Desktop/client/src/features/resultPage/resultPage.js"],"names":["React","useEffect","useHistory","useSelector","LoadingPage","FailPage","Button","ResultPage","history","userData","state","user","status","titleCase","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","window","localStorage","setItem","push","input","content","name","position","email","phone","location","href","_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport './resultPage.css';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport LoadingPage from '../loadingPage/loadingPage';\r\nimport FailPage from '../failPage/failPage';\r\n\r\nimport { Button } from 'semantic-ui-react';\r\n\r\n\r\nexport default function ResultPage() {\r\n    const history = useHistory();\r\n\r\n    const userData = useSelector(state => state.user.userData);\r\n    const status = useSelector(state => state.user.status);\r\n\r\n    function titleCase(str) {\r\n        var splitStr = str.toLowerCase().split(' ');\r\n        for (var i = 0; i < splitStr.length; i++) {\r\n            // You do not need to check if i is larger than splitStr length, as your for does that for you\r\n            // Assign it back to the array\r\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n        }\r\n        // Directly return the joined string\r\n        return splitStr.join(' ');\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem('imanuser', userData);\r\n        history.push('/result')\r\n    }, [input])\r\n\r\n    let content;\r\n\r\n    if (status === 'loading') {\r\n        content = (<LoadingPage />);\r\n    } else if (status === 'succeed') {\r\n        content = (\r\n            <div className='resultPage'>\r\n                <h2>Welcome Back {titleCase(userData.name)} !</h2>\r\n                <div className=\"info-container\">\r\n                    <p>Name: {titleCase(userData.name)}</p>\r\n                    <p>Designation: {titleCase(userData.position)}</p>\r\n                    <p>Email: {userData.email}</p>\r\n                    <p>Contact No: {userData.phone}</p>\r\n                </div>\r\n\r\n                <div className=\"button-container\">\r\n                <Button className=\"button-email home-button\" onClick={() => window.location.href='/'}>Back to Home</Button>\r\n                    <p className='button-result' onClick={() => {\r\n                        history.push(`/user/${userData._id}`)\r\n                    }}>Click</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (status === 'failed') {\r\n        content = (<FailPage />);\r\n    };\r\n\r\n    return <React.Fragment>{content}</React.Fragment>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}