{"ast":null,"code":"export const FETCH_ALL_USERS = 'FETCH_ALL_USERS';\nexport const FETCH_USER_BY_ID = 'FETCH_USER_BY_ID';\nexport const FETCH_USER_BY_EMAIL = 'FETCH_USER_BY_EMAIL';\nconst URL = 'https://limitless-citadel-83805.herokuapp.com';\nexport const initialOptions = {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n};\nexport const fetchAllUsers = () => {\n  return async dispatch => {\n    const result = await fetch(`${URL}/api/users`, initialOptions).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(jsonResponse => {\n      if (!jsonResponse) {\n        return [];\n      }\n\n      return jsonResponse;\n    });\n    dispatch({\n      type: FETCH_ALL_USERS,\n      payload: result[0]\n    });\n  };\n};\nexport const fetchUserById = id => {\n  return async dispatch => {\n    const result = await fetch(`${URL}/api/users/${id}`, initialOptions).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(jsonResponse => {\n      if (!jsonResponse) {\n        return {};\n      }\n\n      return jsonResponse;\n    });\n    dispatch({\n      type: FETCH_USER_BY_ID,\n      payload: result\n    });\n  };\n};\nexport const fetchUserByEmail = email => {\n  return async dispatch => {\n    dispatch({\n      type: LOADING,\n      payload: true\n    });\n    const result = await fetch(`${URL}/api/users/email/${email}`, initialOptions).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(jsonResponse => {\n      if (!jsonResponse) {\n        return {};\n      }\n\n      return jsonResponse;\n    });\n    dispatch({\n      type: FETCH_USER_BY_EMAIL,\n      payload: result[0]\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/ROG/Desktop/client/src/redux/actions/userAction.js"],"names":["FETCH_ALL_USERS","FETCH_USER_BY_ID","FETCH_USER_BY_EMAIL","URL","initialOptions","headers","Accept","fetchAllUsers","dispatch","result","fetch","then","response","ok","json","jsonResponse","type","payload","fetchUserById","id","fetchUserByEmail","email","LOADING"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,MAAMC,GAAG,GAAG,+CAAZ;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,kBADH;AAEL,oBAAgB;AAFX;AADiB,CAAvB;AAQP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAMC,QAAN,IAAkB;AAErB,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEP,GAAI,YAAR,EAAqBC,cAArB,CAAL,CAChBO,IADgB,CACXC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KALgB,EAKdH,IALc,CAKTI,YAAY,IAAI;AACpB,UAAI,CAACA,YAAL,EAAmB;AACf,eAAO,EAAP;AACH;;AACD,aAAOA,YAAP;AACH,KAVgB,CAArB;AAYAP,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEhB,eADD;AAELiB,MAAAA,OAAO,EAAER,MAAM,CAAC,CAAD;AAFV,KAAD,CAAR;AAIH,GAlBD;AAmBH,CApBM;AAuBP,OAAO,MAAMS,aAAa,GAAIC,EAAD,IAAQ;AACjC,SAAO,MAAMX,QAAN,IAAkB;AAErB,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEP,GAAI,cAAagB,EAAG,EAAxB,EAA2Bf,cAA3B,CAAL,CAChBO,IADgB,CACXC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KALgB,EAKdH,IALc,CAKTI,YAAY,IAAI;AACpB,UAAI,CAACA,YAAL,EAAmB;AACf,eAAO,EAAP;AACH;;AACD,aAAOA,YAAP;AACH,KAVgB,CAArB;AAYAP,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEf,gBADD;AAELgB,MAAAA,OAAO,EAAER;AAFJ,KAAD,CAAR;AAIH,GAlBD;AAmBH,CApBM;AAuBP,OAAO,MAAMW,gBAAgB,GAAIC,KAAD,IAAW;AACvC,SAAO,MAAMb,QAAN,IAAkB;AAErBA,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEM,OADD;AAELL,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAKA,UAAMR,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEP,GAAI,oBAAmBkB,KAAM,EAAjC,EAAoCjB,cAApC,CAAL,CAChBO,IADgB,CACXC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KALgB,EAKdH,IALc,CAKTI,YAAY,IAAI;AACpB,UAAI,CAACA,YAAL,EAAmB;AACf,eAAO,EAAP;AACH;;AACD,aAAOA,YAAP;AACH,KAVgB,CAArB;AAYAP,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEd,mBADD;AAELe,MAAAA,OAAO,EAAER,MAAM,CAAC,CAAD;AAFV,KAAD,CAAR;AAIH,GAvBD;AAwBH,CAzBM","sourcesContent":["export const FETCH_ALL_USERS = 'FETCH_ALL_USERS';\r\nexport const FETCH_USER_BY_ID = 'FETCH_USER_BY_ID';\r\nexport const FETCH_USER_BY_EMAIL = 'FETCH_USER_BY_EMAIL';\r\n\r\nconst URL = 'https://limitless-citadel-83805.herokuapp.com';\r\n\r\nexport const initialOptions = {\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n    },\r\n};\r\n\r\n\r\nexport const fetchAllUsers = () => {\r\n    return async dispatch => {\r\n\r\n        const result = await fetch(`${URL}/api/users`, initialOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse => {\r\n                if (!jsonResponse) {\r\n                    return [];\r\n                }\r\n                return jsonResponse;\r\n            })\r\n\r\n        dispatch({\r\n            type: FETCH_ALL_USERS,\r\n            payload: result[0]\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const fetchUserById = (id) => {\r\n    return async dispatch => {\r\n\r\n        const result = await fetch(`${URL}/api/users/${id}`, initialOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse => {\r\n                if (!jsonResponse) {\r\n                    return {};\r\n                }\r\n                return jsonResponse;\r\n            })\r\n\r\n        dispatch({\r\n            type: FETCH_USER_BY_ID,\r\n            payload: result\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const fetchUserByEmail = (email) => {\r\n    return async dispatch => {\r\n\r\n        dispatch({\r\n            type: LOADING,\r\n            payload: true\r\n        });\r\n\r\n        const result = await fetch(`${URL}/api/users/email/${email}`, initialOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse => {\r\n                if (!jsonResponse) {\r\n                    return {};\r\n                }\r\n                return jsonResponse;\r\n            })\r\n\r\n        dispatch({\r\n            type: FETCH_USER_BY_EMAIL,\r\n            payload: result[0]\r\n        });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}