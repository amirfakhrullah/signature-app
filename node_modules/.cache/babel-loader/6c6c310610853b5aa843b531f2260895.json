{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\Desktop\\\\client\\\\src\\\\features\\\\resultPage\\\\resultPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './resultPage.css';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LoadingPage from '../loadingPage/loadingPage';\nimport FailPage from '../failPage/failPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResultPage() {\n  _s();\n\n  const history = useHistory();\n  const userData = useSelector(state => state.user.userData);\n  const status = useSelector(state => state.user.status);\n  let content;\n\n  if (status === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 20\n    }, this);\n  } else if (status === 'succeed') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcom back \", userData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-with-button\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resultContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: userData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: userData.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"button-result\",\n          onClick: () => {\n            history.push(`/user/${userData._id}`);\n          },\n          children: \"Click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  } else if (status === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(FailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ResultPage, \"FncVpzTiKyZycYsV8U+ZotWa6Sc=\", false, function () {\n  return [useHistory, useSelector, useSelector];\n});\n\n_c = ResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"sources":["C:/Users/ROG/Desktop/client/src/features/resultPage/resultPage.js"],"names":["React","useHistory","useSelector","LoadingPage","FailPage","ResultPage","history","userData","state","user","status","content","name","email","push","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEA,QAAMM,QAAQ,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,QAArB,CAA5B;AACA,QAAMG,MAAM,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,MAArB,CAA1B;AAEA,MAAIC,OAAJ;;AAEA,MAAID,MAAM,KAAK,SAAf,EAA0B;AACtBC,IAAAA,OAAO,gBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAX;AACH,GAFD,MAEO,IAAID,MAAM,KAAK,SAAf,EAA0B;AAC7BC,IAAAA,OAAO,gBACH;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACQ;AAAA,mCAAiBJ,QAAQ,CAACK,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACI;AAAA,wBAAIL,QAAQ,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAIL,QAAQ,CAACM;AAAb;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFR,eAUQ;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,eAAb;AAA6B,UAAA,OAAO,EAAE,MAAM;AACxCP,YAAAA,OAAO,CAACQ,IAAR,CAAc,SAAQP,QAAQ,CAACQ,GAAI,EAAnC;AACH,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH,GAnBM,MAmBA,IAAIL,MAAM,KAAK,QAAf,EAAyB;AAC5BC,IAAAA,OAAO,gBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAX;AACH;;AAAA;AAED,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,cAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAlCuBN,U;UACJJ,U,EAECC,W,EACFA,W;;;KAJKG,U","sourcesContent":["import React from 'react';\r\nimport './resultPage.css';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport LoadingPage from '../loadingPage/loadingPage';\r\nimport FailPage from '../failPage/failPage';\r\n\r\n\r\nexport default function ResultPage() {\r\n    const history = useHistory();\r\n\r\n    const userData = useSelector(state => state.user.userData);\r\n    const status = useSelector(state => state.user.status);\r\n\r\n    let content;\r\n\r\n    if (status === 'loading') {\r\n        content = (<LoadingPage />);\r\n    } else if (status === 'succeed') {\r\n        content = (\r\n            <div className='resultPage'>\r\n                    <h2>Welcom back {userData.name}</h2>\r\n                    <div className='result-with-button'>\r\n                        <div className='resultContainer'>\r\n                            <div className='result'>\r\n                                <p>{userData.name}</p>\r\n                                <p>{userData.email}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <p className='button-result' onClick={() => {\r\n                            history.push(`/user/${userData._id}`)\r\n                        }}>Click</p>\r\n                    </div>\r\n                </div>\r\n        );\r\n    } else if (status === 'failed') {\r\n        content = (<FailPage />);\r\n    };\r\n\r\n    return <React.Fragment>{content}</React.Fragment>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}