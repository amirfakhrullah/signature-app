{"ast":null,"code":"export const FETCH_ALL_USERS = 'FETCH_ALL_USERS';\nexport const FETCH_USER_BY_ID = 'FETCH_USER_BY_ID';\nexport const FETCH_USER_BY_EMAIL = 'FETCH_USER_BY_EMAIL';\nconst URL = 'http://192.168.0.189:3001';\nexport const initialOptions = {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n};\nexport const fetchAllUsers = () => {\n  return async dispatch => {\n    const result = await fetch(`${URL}/api/users`, initialOptions).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(jsonResponse => {\n      if (!jsonResponse) {\n        return [];\n      }\n\n      console.log(jsonResponse);\n      return jsonResponse;\n    });\n    dispatch({\n      type: FETCH_ALL_USERS,\n      payload: result\n    });\n  };\n};\nexport const fetchUserById = id => {\n  return async dispatch => {\n    const result = await fetch(`${URL}/api/users/${id}`, initialOptions).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(jsonResponse => {\n      if (!jsonResponse) {\n        return {};\n      }\n\n      console.log(jsonResponse);\n      return jsonResponse;\n    });\n    dispatch({\n      type: FETCH_USER_BY_ID,\n      payload: result\n    });\n  };\n};\nexport const fetchUserByEmail = email => {\n  return async dispatch => {\n    // const result = await fetch(`${URL}/api/users/email/${email}`, initialOptions)\n    //     .then(response => {\n    //         if (response.ok) {\n    //             return response.json();\n    //         }\n    //     }).then(jsonResponse => {\n    //         if (!jsonResponse) {\n    //             return {};\n    //         }\n    //         console.log(jsonResponse);\n    //         return jsonResponse;\n    //     })\n    // dispatch({\n    //     type: FETCH_USER_BY_EMAIL,\n    //     payload: result\n    // });\n    const result = await fetch(`${URL}/api/users`, initialOptions).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(jsonResponse => {\n      if (!jsonResponse) {\n        return {};\n      }\n\n      jsonResponse;\n      console.log(jsonResponse);\n      return jsonResponse;\n    });\n    dispatch({\n      type: FETCH_USER_BY_EMAIL,\n      payload: result\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/ROG/Desktop/signatureApp/client/src/redux/actions/userAction.js"],"names":["FETCH_ALL_USERS","FETCH_USER_BY_ID","FETCH_USER_BY_EMAIL","URL","initialOptions","headers","Accept","fetchAllUsers","dispatch","result","fetch","then","response","ok","json","jsonResponse","console","log","type","payload","fetchUserById","id","fetchUserByEmail","email"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,MAAMC,GAAG,GAAG,2BAAZ;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,kBADH;AAEL,oBAAgB;AAFX;AADiB,CAAvB;AAQP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAMC,QAAN,IAAkB;AAErB,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEP,GAAI,YAAR,EAAqBC,cAArB,CAAL,CAChBO,IADgB,CACXC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KALgB,EAKdH,IALc,CAKTI,YAAY,IAAI;AACpB,UAAI,CAACA,YAAL,EAAmB;AACf,eAAO,EAAP;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,aAAOA,YAAP;AACH,KAXgB,CAArB;AAaAP,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAElB,eADD;AAELmB,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GAnBD;AAoBH,CArBM;AAwBP,OAAO,MAAMW,aAAa,GAAIC,EAAD,IAAQ;AACjC,SAAO,MAAMb,QAAN,IAAkB;AAErB,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEP,GAAI,cAAakB,EAAG,EAAxB,EAA2BjB,cAA3B,CAAL,CAChBO,IADgB,CACXC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KALgB,EAKdH,IALc,CAKTI,YAAY,IAAI;AACpB,UAAI,CAACA,YAAL,EAAmB;AACf,eAAO,EAAP;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,aAAOA,YAAP;AACH,KAXgB,CAArB;AAaAP,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEjB,gBADD;AAELkB,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GAnBD;AAoBH,CArBM;AAwBP,OAAO,MAAMa,gBAAgB,GAAIC,KAAD,IAAW;AACvC,SAAO,MAAMf,QAAN,IAAkB;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEP,GAAI,YAAR,EAAqBC,cAArB,CAAL,CAChBO,IADgB,CACXC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KALgB,EAKdH,IALc,CAKTI,YAAY,IAAI;AACpB,UAAI,CAACA,YAAL,EAAmB;AACf,eAAO,EAAP;AACH;;AACDA,MAAAA,YAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,aAAOA,YAAP;AACH,KAZgB,CAArB;AAcAP,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEhB,mBADD;AAELiB,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GAtCD;AAuCH,CAxCM","sourcesContent":["export const FETCH_ALL_USERS = 'FETCH_ALL_USERS';\r\nexport const FETCH_USER_BY_ID = 'FETCH_USER_BY_ID';\r\nexport const FETCH_USER_BY_EMAIL = 'FETCH_USER_BY_EMAIL';\r\n\r\nconst URL = 'http://192.168.0.189:3001';\r\n\r\nexport const initialOptions = {\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n    },\r\n};\r\n\r\n\r\nexport const fetchAllUsers = () => {\r\n    return async dispatch => {\r\n\r\n        const result = await fetch(`${URL}/api/users`, initialOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse => {\r\n                if (!jsonResponse) {\r\n                    return [];\r\n                }\r\n                console.log(jsonResponse);\r\n                return jsonResponse;\r\n            })\r\n\r\n        dispatch({\r\n            type: FETCH_ALL_USERS,\r\n            payload: result\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const fetchUserById = (id) => {\r\n    return async dispatch => {\r\n\r\n        const result = await fetch(`${URL}/api/users/${id}`, initialOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse => {\r\n                if (!jsonResponse) {\r\n                    return {};\r\n                }\r\n                console.log(jsonResponse);\r\n                return jsonResponse;\r\n            })\r\n\r\n        dispatch({\r\n            type: FETCH_USER_BY_ID,\r\n            payload: result\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const fetchUserByEmail = (email) => {\r\n    return async dispatch => {\r\n\r\n        // const result = await fetch(`${URL}/api/users/email/${email}`, initialOptions)\r\n        //     .then(response => {\r\n        //         if (response.ok) {\r\n        //             return response.json();\r\n        //         }\r\n        //     }).then(jsonResponse => {\r\n        //         if (!jsonResponse) {\r\n        //             return {};\r\n        //         }\r\n        //         console.log(jsonResponse);\r\n        //         return jsonResponse;\r\n        //     })\r\n\r\n        // dispatch({\r\n        //     type: FETCH_USER_BY_EMAIL,\r\n        //     payload: result\r\n        // });\r\n\r\n        const result = await fetch(`${URL}/api/users`, initialOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse => {\r\n                if (!jsonResponse) {\r\n                    return {};\r\n                }\r\n                jsonResponse\r\n                console.log(jsonResponse);\r\n                return jsonResponse;\r\n            })\r\n\r\n        dispatch({\r\n            type: FETCH_USER_BY_EMAIL,\r\n            payload: result\r\n        });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}