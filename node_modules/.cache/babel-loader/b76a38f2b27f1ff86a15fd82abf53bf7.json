{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ROG/Desktop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/ROG/Desktop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var FETCH_ALL_USERS='FETCH_ALL_USERS';export var FETCH_USER_BY_ID='FETCH_USER_BY_ID';export var FETCH_USER_BY_EMAIL='FETCH_USER_BY_EMAIL';export var LOADING='LOADING';export var FAIL='FAIL';var URL='https://limitless-citadel-83805.herokuapp.com';export var initialOptions={headers:{Accept:'application/json','Content-Type':'application/json'}};export var fetchAllUsers=function fetchAllUsers(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:LOADING});_context.next=3;return fetch(\"\".concat(URL,\"/api/users\"),initialOptions).then(function(response){if(response.ok){return response.json();}}).then(function(jsonResponse){if(!jsonResponse){dispatch({type:FAIL});return[];};return jsonResponse;});case 3:result=_context.sent;if(!result[0]){dispatch({type:FAIL});}else{dispatch({type:FETCH_ALL_USERS,payload:result[0]});}case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var fetchUserById=function fetchUserById(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:LOADING});_context2.next=3;return fetch(\"\".concat(URL,\"/api/users/\").concat(id),initialOptions).then(function(response){if(response.ok){return response.json();}}).then(function(jsonResponse){if(!jsonResponse){dispatch({type:FAIL});return{};}return jsonResponse;});case 3:result=_context2.sent;if(!result[0]){dispatch({type:FAIL});}else{dispatch({type:FETCH_USER_BY_ID,payload:result[0]});}case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var fetchUserByEmail=function fetchUserByEmail(email){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch({type:LOADING});_context3.next=3;return fetch(\"\".concat(URL,\"/api/users/email/\").concat(email),initialOptions).then(function(response){if(response.ok){return response.json();}}).then(function(jsonResponse){if(!jsonResponse){return{};}return jsonResponse;});case 3:result=_context3.sent;if(!result[0]){dispatch({type:FAIL});}else{dispatch({type:FETCH_USER_BY_EMAIL,payload:result[0]});}case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/ROG/Desktop/client/src/redux/actions/userAction.js"],"names":["FETCH_ALL_USERS","FETCH_USER_BY_ID","FETCH_USER_BY_EMAIL","LOADING","FAIL","URL","initialOptions","headers","Accept","fetchAllUsers","dispatch","type","fetch","then","response","ok","json","jsonResponse","result","payload","fetchUserById","id","fetchUserByEmail","email"],"mappings":"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","sourcesContent":["export const FETCH_ALL_USERS = 'FETCH_ALL_USERS';\r\nexport const FETCH_USER_BY_ID = 'FETCH_USER_BY_ID';\r\nexport const FETCH_USER_BY_EMAIL = 'FETCH_USER_BY_EMAIL';\r\nexport const LOADING = 'LOADING';\r\nexport const FAIL = 'FAIL';\r\n\r\nconst URL = 'https://limitless-citadel-83805.herokuapp.com';\r\n\r\nexport const initialOptions = {\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n    },\r\n};\r\n\r\n\r\nexport const fetchAllUsers = () => {\r\n    return async dispatch => {\r\n\r\n        dispatch({\r\n            type: LOADING\r\n        });\r\n\r\n        const result = await fetch(`${URL}/api/users`, initialOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse => {\r\n                if (!jsonResponse) {\r\n                    dispatch({\r\n                        type: FAIL\r\n                    });\r\n                    return [];\r\n                };\r\n                return jsonResponse;\r\n            })\r\n\r\n        if (!result[0]) {\r\n            dispatch({\r\n                type: FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FETCH_ALL_USERS,\r\n                payload: result[0]\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const fetchUserById = (id) => {\r\n    return async dispatch => {\r\n\r\n        dispatch({\r\n            type: LOADING\r\n        });\r\n\r\n        const result = await fetch(`${URL}/api/users/${id}`, initialOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse => {\r\n                if (!jsonResponse) {\r\n                    dispatch({\r\n                        type: FAIL\r\n                    });\r\n                    return {};\r\n                }\r\n                return jsonResponse;\r\n            })\r\n\r\n        if (!result[0]) {\r\n            dispatch({\r\n                type: FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FETCH_USER_BY_ID,\r\n                payload: result[0]\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const fetchUserByEmail = (email) => {\r\n    return async dispatch => {\r\n\r\n        dispatch({\r\n            type: LOADING,\r\n        });\r\n\r\n        const result = await fetch(`${URL}/api/users/email/${email}`, initialOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n            }).then(jsonResponse => {\r\n                if (!jsonResponse) {\r\n                    return {};\r\n                }\r\n                return jsonResponse;\r\n            })\r\n\r\n        if (!result[0]) {\r\n            dispatch({\r\n                type: FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FETCH_USER_BY_EMAIL,\r\n                payload: result[0]\r\n            });\r\n        }\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}