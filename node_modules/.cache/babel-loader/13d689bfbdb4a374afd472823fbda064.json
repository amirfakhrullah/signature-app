{"ast":null,"code":"import React,{useEffect}from'react';import'./resultPage.css';import{useHistory}from'react-router-dom';import{useSelector}from'react-redux';import LoadingPage from'../loadingPage/loadingPage';import FailPage from'../failPage/failPage';import{Button}from'semantic-ui-react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ResultPage(){var history=useHistory();var userData=useSelector(function(state){return state.user.userData;});var status=useSelector(function(state){return state.user.status;});function titleCase(str){var splitStr=str.toLowerCase().split(' ');for(var i=0;i<splitStr.length;i++){// You do not need to check if i is larger than splitStr length, as your for does that for you\n// Assign it back to the array\nsplitStr[i]=splitStr[i].charAt(0).toUpperCase()+splitStr[i].substring(1);}// Directly return the joined string\nreturn splitStr.join(' ');}useEffect(function(){if(status==='idle'){window.location.href='/';}});var content;if(status==='loading'){content=/*#__PURE__*/_jsx(LoadingPage,{});}else if(status==='succeed'){content=/*#__PURE__*/_jsxs(\"div\",{className:\"resultPage\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Welcome Back \",titleCase(userData.name),\" !\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-container\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Name: \",titleCase(userData.name)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Designation: \",titleCase(userData.position)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Email: \",userData.email]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Contact No: \",userData.phone]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(Button,{className:\"button-email result-page-button secondary-button\",onClick:function onClick(){return window.location.href='/';},children:\"Back to Login\"}),/*#__PURE__*/_jsx(Button,{className:\"button-email result-page-button\",onClick:function onClick(){return history.push(\"/user/\".concat(userData._id));},children:\"Get Signature\"})]})]});}else if(status==='failed'){content=/*#__PURE__*/_jsx(FailPage,{});};return/*#__PURE__*/_jsx(React.Fragment,{children:content});}","map":{"version":3,"sources":["C:/Users/ROG/Desktop/client/src/features/resultPage/resultPage.js"],"names":["React","useEffect","useHistory","useSelector","LoadingPage","FailPage","Button","ResultPage","history","userData","state","user","status","titleCase","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","window","location","href","content","name","position","email","phone","push","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,kBAAP,CAEA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,WAAT,KAA4B,aAA5B,CAGA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CAEA,OAASC,MAAT,KAAuB,mBAAvB,C,wFAGA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CAEjC,GAAMC,CAAAA,OAAO,CAAGN,UAAU,EAA1B,CAEA,GAAMO,CAAAA,QAAQ,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWF,QAAf,EAAN,CAA5B,CACA,GAAMG,CAAAA,MAAM,CAAGT,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWC,MAAf,EAAN,CAA1B,CAEA,QAASC,CAAAA,SAAT,CAAmBC,GAAnB,CAAwB,CACpB,GAAIC,CAAAA,QAAQ,CAAGD,GAAG,CAACE,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,CAAf,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,QAAQ,CAACI,MAA7B,CAAqCD,CAAC,EAAtC,CAA0C,CACtC;AACA;AACAH,QAAQ,CAACG,CAAD,CAAR,CAAcH,QAAQ,CAACG,CAAD,CAAR,CAAYE,MAAZ,CAAmB,CAAnB,EAAsBC,WAAtB,GAAsCN,QAAQ,CAACG,CAAD,CAAR,CAAYI,SAAZ,CAAsB,CAAtB,CAApD,CACH,CACD;AACA,MAAOP,CAAAA,QAAQ,CAACQ,IAAT,CAAc,GAAd,CAAP,CACH,CAEDtB,SAAS,CAAC,UAAM,CACZ,GAAIW,MAAM,GAAK,MAAf,CAAuB,CACnBY,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,GAAvB,CACH,CACJ,CAJQ,CAAT,CAOA,GAAIC,CAAAA,OAAJ,CAEA,GAAIf,MAAM,GAAK,SAAf,CAA0B,CACtBe,OAAO,cAAI,KAAC,WAAD,IAAX,CACH,CAFD,IAEO,IAAIf,MAAM,GAAK,SAAf,CAA0B,CAC7Be,OAAO,cACH,aAAK,SAAS,CAAC,YAAf,wBACI,sCAAkBd,SAAS,CAACJ,QAAQ,CAACmB,IAAV,CAA3B,QADJ,cAEI,aAAK,SAAS,CAAC,gBAAf,wBACI,8BAAUf,SAAS,CAACJ,QAAQ,CAACmB,IAAV,CAAnB,GADJ,cAEI,qCAAiBf,SAAS,CAACJ,QAAQ,CAACoB,QAAV,CAA1B,GAFJ,cAGI,+BAAWpB,QAAQ,CAACqB,KAApB,GAHJ,cAII,oCAAgBrB,QAAQ,CAACsB,KAAzB,GAJJ,GAFJ,cASI,aAAK,SAAS,CAAC,kBAAf,wBACI,KAAC,MAAD,EAAQ,SAAS,CAAC,kDAAlB,CAAqE,OAAO,CAAE,yBAAMP,CAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,GAA7B,EAA9E,2BADJ,cAEI,KAAC,MAAD,EAAQ,SAAS,CAAC,iCAAlB,CAAoD,OAAO,CAAE,yBAAMlB,CAAAA,OAAO,CAACwB,IAAR,iBAAsBvB,QAAQ,CAACwB,GAA/B,EAAN,EAA7D,2BAFJ,GATJ,GADJ,CAgBH,CAjBM,IAiBA,IAAIrB,MAAM,GAAK,QAAf,CAAyB,CAC5Be,OAAO,cAAI,KAAC,QAAD,IAAX,CACH,EAED,mBAAO,KAAC,KAAD,CAAO,QAAP,WAAiBA,OAAjB,EAAP,CACH","sourcesContent":["import React, { useEffect } from 'react';\r\nimport './resultPage.css';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nimport LoadingPage from '../loadingPage/loadingPage';\r\nimport FailPage from '../failPage/failPage';\r\n\r\nimport { Button } from 'semantic-ui-react';\r\n\r\n\r\nexport default function ResultPage() {\r\n\r\n    const history = useHistory();\r\n\r\n    const userData = useSelector(state => state.user.userData);\r\n    const status = useSelector(state => state.user.status);\r\n\r\n    function titleCase(str) {\r\n        var splitStr = str.toLowerCase().split(' ');\r\n        for (var i = 0; i < splitStr.length; i++) {\r\n            // You do not need to check if i is larger than splitStr length, as your for does that for you\r\n            // Assign it back to the array\r\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n        }\r\n        // Directly return the joined string\r\n        return splitStr.join(' ');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (status === 'idle') {\r\n            window.location.href = '/';\r\n        }\r\n    });\r\n\r\n\r\n    let content;\r\n\r\n    if (status === 'loading') {\r\n        content = (<LoadingPage />);\r\n    } else if (status === 'succeed') {\r\n        content = (\r\n            <div className='resultPage'>\r\n                <h2>Welcome Back {titleCase(userData.name)} !</h2>\r\n                <div className=\"info-container\">\r\n                    <p>Name: {titleCase(userData.name)}</p>\r\n                    <p>Designation: {titleCase(userData.position)}</p>\r\n                    <p>Email: {userData.email}</p>\r\n                    <p>Contact No: {userData.phone}</p>\r\n                </div>\r\n\r\n                <div className=\"button-container\">\r\n                    <Button className=\"button-email result-page-button secondary-button\" onClick={() => window.location.href = '/'}>Back to Login</Button>\r\n                    <Button className=\"button-email result-page-button\" onClick={() => history.push(`/user/${userData._id}`)}>Get Signature</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (status === 'failed') {\r\n        content = (<FailPage />);\r\n    };\r\n\r\n    return <React.Fragment>{content}</React.Fragment>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}